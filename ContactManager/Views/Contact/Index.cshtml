@model List<Contact>

@{
    ViewData["Title"] = "Contacts";
}

<div class="d-flex flex-row justify-content-between align-items-center my-3">
    <form enctype="multipart/form-data" asp-action="ImportCsv" method="post" class="card">
        <div class="card-body">
            <dl>
                <dd>
                    <input type="file" name="file" required/>
                </dd>
            </dl>
            <input class="btn btn-primary" type="submit" value="Upload"/>
        </div>
    </form>
    <div>
        <input id="search" type="text" class="input-group-text" placeholder="Search">
    </div>
</div>

<table id="contactsTable" class="table">
    <thead>
    <tr>
        <th>
            <input type="button" class="btn btn-info sortable" data-column="Name" data-order="asc" value="Name">
        </th>
        <th>
            <input type="button" class="btn btn-info sortable" data-column="DateOfBirth" data-order="asc" value="Date of Birth">
        </th>
        <th>
            <input type="button" class="btn btn-info sortable" data-column="Married" data-order="asc" value="Married">
        </th>
        <th>
            <input type="button" class="btn btn-info sortable" data-column="Phone" data-order="asc" value="Phone">
        </th>
        <th>
            <input type="button" class="btn btn-info sortable" data-column="Salary" data-order="asc" value="Salary">
        </th>
        <th colspan="2">
            <span class="d-flex flex-row justify-content-center">Actions</span>
        </th>
    </tr>
    </thead>
    <tbody>
    @foreach (var contact in Model)
    {
        <tr data-id="@contact.Id">
            <form asp-action="Update" method="post">
                <input type="hidden" name="id" value="@contact.Id"/>

                <td>
                    <input type="text" name="updatedContact.Name" value="@contact.Name" required/>
                </td>
                <td>
                    <input type="date" name="updatedContact.DateOfBirth" value="@contact.DateOfBirth.ToString("yyyy-MM-dd")" required/>
                </td>
                <td>
                    @Html.CheckBox("updatedContact.Married", contact.Married)
                </td>
                <td>
                    <input type="text" pattern="0[0-9]{9}" title="Phone number must be in the format 0XXXXXXXXX." name="updatedContact.Phone" value="@contact.Phone" required/>
                </td>
                <td>
                    <input type="number" step="0.01" name="updatedContact.Salary" value="@contact.Salary" required/>
                </td>
                <td>
                    <button type="submit" class="btn btn-primary">Save</button>
                </td>
            </form>
            <form asp-action="Delete" method="post">
                <td>
                    <input type="hidden" name="id" value="@contact.Id"/>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </td>
            </form>
        </tr>
    }
    </tbody>
</table>

<script>
    // filtering functionality
    document.getElementById('search').addEventListener('input', function() {
        const searchValue = this.value.toLowerCase();
        const rows = document.querySelectorAll('#contactsTable tbody tr');

        rows.forEach(row => {
            const inputs = row.querySelectorAll('input[type="text"], input[type="number"], input[type="checkbox"], input[type="date"]');
            
            let shouldShow = false;
            
            inputs.forEach(input => {
                if (input.value.toLowerCase().includes(searchValue)) {
                    shouldShow = true;
                }
            });

            row.style.display = shouldShow ? '' : 'none';
        });
    });
    
    // sorting functionality
    document.querySelectorAll('.sortable').forEach(header => {
        header.addEventListener('click', function() {
            const column = this.getAttribute('data-column');
            const order = this.getAttribute('data-order');
            const newOrder = order === 'asc' ? 'desc' : 'asc';

            const tableBody = document.querySelector('#contactsTable tbody');
            const rowsArray = Array.from(tableBody.querySelectorAll('tr'));

            rowsArray.sort((a, b) => {
                let aInput = a.querySelector(`input[name="updatedContact.${column}"]`);
                let bInput = b.querySelector(`input[name="updatedContact.${column}"]`);
                
                let aValue, bValue;
                
                if (column === "Married") {
                    aValue = aInput.checked ? 1 : 0;
                    bValue = bInput.checked ? 1 : 0;
                }
                else {
                    aValue = aInput.value;
                    bValue = bInput.value;
                }

                if (order === 'asc') {
                    return (aValue > bValue) ? 1 : (aValue < bValue) ? -1 : 0;
                } else {
                    return (aValue < bValue) ? 1 : (aValue > bValue) ? -1 : 0;
                }
            });

            rowsArray.forEach(row => tableBody.appendChild(row));

            document.querySelectorAll('.sortable').forEach(h => h.setAttribute('data-order', 'asc'));
            this.setAttribute('data-order', newOrder);
        });
    });
</script>